{"version":3,"sources":["Images/reactjs.png","Images/nodejs.png","Images/mongodb.png","components/ExpenseForm.js","components/Notification.js","services/expense-split.js","components/Home.js","components/About.js","components/Login.js","components/Signup.js","services/login.js","services/signup.js","components/UserService.js","components/Navigation.js","components/DisplayExpense.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ExpenseForm","props","react_default","a","createElement","Container","className","Form","onSubmit","addExpense","Row","Col","Card","Control","onChange","ExpName","value","expenseName","placeholder","required","date","dateValue","type","members","map","member","index","key","name","event","Member","Button","variant","title","onClick","rmMember","addMember","Amount","amt","Check","label","radio","checked","isChecked","checkbox","Notification","msg","url","token","expense_split","setToken","newToken","concat","getData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","addData","_ref2","_callee2","expense","config","_context2","headers","Authorization","post","_x","deleteData","_ref3","_callee3","expense_id","_context3","delete","_x2","updateData","_ref4","_callee4","_context4","put","_x3","_x4","Home","_useState","useState","_useState2","slicedToArray","expenses","setExpenses","_useState3","_useState4","expName","setExpName","_useState5","_useState6","setDate","_useState7","_useState8","setAmt","_useState9","_useState10","setMembers","_useState11","_useState12","by","setBy","_useState13","_useState14","message","setMessage","showMessage","setTimeout","components_Notification","components_ExpenseForm","target","temp","toConsumableArray","preventDefault","expense_name","amount","Number","by_whom","length","isNaN","console","log","expenseService","then","returnedExpense","catch","error","id","push","splice","href","About","src","react","alt","node","mongodb","rel","Login","Modal","show","onHide","Close","Header","closeButton","Body","login","username","pwd","Signup","signup","services_login","credentials","services_signup","UserService","loginModal","setLoginModal","handleLoginNoModal","signupModal","setSignupModal","handleSignupNoModal","setName","setUsername","password","setPassword","user","setUser","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleUsername","handlePassword","handleLogin","loginService","setItem","stringify","handleSignup","addedUser","signupService","Nav","Link","components_Login","components_Signup","react_router_dom","to","removeItem","Navigation","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","components_UserService","DisplayExpense","Date","to_whom","filter","count","share","getDate","getMonth","getFullYear","App","components_Navigation","react_router","exact","path","component","render","components_About","components_DisplayExpense","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d1762ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactjs.815bfb21.png\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.dacb853d.png\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.3bd34a07.png\";","import React from 'react'\r\nimport {Container, Row, Col, Card, Button, Form} from 'react-bootstrap'\r\n\r\nconst ExpenseForm = (props) => {\r\n return (\r\n    <Container className=\"split\">\r\n        <Form onSubmit={props.addExpense} >\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <h4>1) Name your Expense</h4>\r\n                        <Form.Control onChange={props.ExpName} value={props.expenseName || \"\"} placeholder=\"Expense Name\" required/>\r\n                        <Form.Control onChange={props.date} value={props.dateValue} type=\"date\" placeholder=\"Date\" required/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card>\r\n                        <h4>2) Add your Group</h4>\r\n                        {\r\n                            props.members.map((member,index) => {\r\n                                return (\r\n                                    <Row key={index}>\r\n                                        <Form.Control className=\"col-sm-9\" value={member.name || \"\"} placeholder=\"Person Name\" onChange={(event) => props.Member(event, index)} required/>\r\n                                        <Button className=\"col-sm-2 minusBtn\" variant=\"dark\" title=\"delete member\" onClick={() => props.rmMember(index)}><b>-</b></Button>\r\n                                    </Row>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Button className=\"addBtn\" variant=\"dark\" title=\"add member\" onClick={(event) => props.addMember(event)}><b>+</b></Button>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card>\r\n                        <h4>3) Enter the Expenses</h4>\r\n                        <Form.Control onChange={props.Amount} value={props.amt || \"\"} placeholder=\"Amount\" required/>\r\n                        <Row><b>By whom:</b></Row> \r\n                        <Row>\r\n                        {\r\n                            props.members.map((member,index) => {\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <Col><Form.Check type=\"radio\" value={member.name || \"\"} label={member.name} onChange={props.radio}/></Col>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        </Row>\r\n\r\n                        <Row><b>To whom:</b></Row>\r\n                        <Row>\r\n                        {\r\n                            props.members.map((member,index) => {\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <Col><Form.Check type=\"checkbox\" value={member.name || \"\"} label={member.name} checked={member.isChecked} onChange={() => props.checkbox(index)}/></Col>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Button variant=\"dark\" title=\"Split\" className=\"split_btn\" type=\"submit\">Finally, Split It</Button>\r\n        </Form>\r\n    </Container>\r\n )\r\n}\r\n\r\nexport default ExpenseForm","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    if(props.msg === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        props.msg\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst url = '/api/expenses'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getData = async () => {\r\n    const response = await axios.get(url)\r\n    return response.data\r\n}\r\n\r\nconst addData = async (expense)=> {\r\n    const config = {\r\n        headers: { Authorization : token }\r\n    }\r\n    const response = await axios.post(url, expense, config)\r\n    return response.data\r\n}\r\n\r\nconst deleteData = async (expense_id) => {\r\n    const response = await axios.delete(`${url}/${expense_id}`)\r\n    return response.data\r\n}\r\n\r\nconst updateData = async (expense_id, expense) => {\r\n    const response = await axios.put(`${url}/${expense_id}`, expense)\r\n    return response.data\r\n}\r\n\r\nexport default { setToken, getData, addData, deleteData, updateData }","import React, {useState} from 'react'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport ExpenseModal from './ExpenseModal'\r\nimport Notification from './Notification'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst Home = () => {\r\n    const [expenses, setExpenses] = useState([])\r\n    const [expName, setExpName] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [amt, setAmt] = useState('')\r\n    const [members, setMembers] = useState([{name: null, isChecked: false}])\r\n    const [by, setBy] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const showMessage = (message) => {\r\n      setMessage(message)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n    \r\n    const handleExpName = (event) => setExpName(event.target.value)\r\n  \r\n    const handleDate = (event) => setDate(event.target.value)\r\n  \r\n    const handleAmount = (event) => setAmt(event.target.value)\r\n  \r\n    const handleRadio = (event) => setBy(event.target.value)\r\n  \r\n    const handleMember = (event, index) => {\r\n      const temp = [...members]\r\n      temp[index].name = event.target.value\r\n      setMembers(temp)\r\n    }\r\n   \r\n    const addMember = () => {\r\n      const temp = [...members]\r\n      temp.push({name: null, isChecked: false})\r\n      setMembers(temp)\r\n    }\r\n  \r\n    const removeMember = (index) => {\r\n      const temp = [...members]\r\n      temp.splice(index, 1)\r\n      setMembers(temp)\r\n    }\r\n  \r\n    const handleCheckbox = (index) => {\r\n      const temp = [...members]\r\n      temp[index].isChecked = !temp[index].isChecked\r\n      setMembers(temp)\r\n    }\r\n  \r\n    const addExpense = (event) => {\r\n      event.preventDefault()\r\n      const expense = {\r\n        expense_name: expName,\r\n        date: date,\r\n        members: members,\r\n        amount: Number(amt),\r\n        by_whom: by\r\n      }\r\n      if(expense.expense_name !== '' && expense.date !== '' && expense.amount !== '' && expense.by_whom !== '' && expense.members.length !== 0 &&\r\n        isNaN(expense.amount) !== true) {\r\n        console.log(isNaN(expense.amount))\r\n        expenseService.addData(expense)\r\n        .then(returnedExpense => {\r\n          setExpenses(expenses.concat(returnedExpense)) \r\n          setExpName('')\r\n          setDate('')\r\n          setAmt('')\r\n          setMembers([])\r\n          setBy('')\r\n        })\r\n        .catch(error => {\r\n          showMessage(<div id=\"snackbar\">Validation failed :( <br />Please verify your details</div>)\r\n        })\r\n      }\r\n      else if(isNaN(expense.amount) === true) {\r\n        showMessage(<div id=\"snackbar\">Please enter a valid Amount :)</div>)\r\n      }\r\n      else {\r\n        showMessage(<div id=\"snackbar\">Please enter all the details :)</div>)\r\n      }\r\n    } \r\n\r\n    return (\r\n        <center>\r\n            <Notification msg={message} />\r\n            \r\n            <ExpenseForm ExpName={handleExpName} date={handleDate} Amount={handleAmount} Member={handleMember} addExpense={addExpense} addMember={addMember} \r\n                rmMember={removeMember} members={members} expenseName={expName} dateValue={date} amt={amt} radio={handleRadio} checkbox={handleCheckbox}/>\r\n            \r\n            <footer className=\"bottom\">\r\n              <a href=\"/about\">about</a>\r\n            </footer>\r\n        </center>       \r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport react from '../Images/reactjs.png'\r\nimport node from '../Images/nodejs.png'\r\nimport mongodb from '../Images/mongodb.png'\r\n\r\nconst About = () => {\r\n    return (\r\n        <center className=\"container\">\r\n            <div>\r\n                <h3><b>Expense <span className=\"slash\">/</span> Split</b></h3>\r\n                <div className=\"logos\">\r\n                    <span className=\"logo react\">\r\n                      <img src={react} alt=\"Reactjs\" title=\"React\" />\r\n                    </span>\r\n                    <span className=\"plus\">+</span>\r\n                    <span className=\"logo node\">\r\n                        <img src={node} alt=\"Nodejs\" title=\"Node JS\" />\r\n                    </span>\r\n                    <span className=\"plus\">+</span>\r\n                    <span className=\"logo mongodb\">\r\n                        <img src={mongodb} alt=\"Mongodb\" title=\"mongo DB\" />\r\n                    </span>\r\n                </div>\r\n                <ol className=\"stack\">\r\n                    <li className=\"tech\">Express</li>\r\n                    <li className=\"tech\">REST API</li>\r\n                    <li className=\"tech\">SASS</li>\r\n                    <li className=\"tech\">Bootstrap</li>\r\n                </ol>\r\n            </div>\r\n            <p className=\"footer\">designed & developed by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a></p>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <Modal id=\"loginModal\" show={props.show} onHide={props.Close}>\r\n            <Modal.Header closeButton><b>Log In</b></Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.login} className=\"loginInputs\">\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required />\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required />\r\n                    <center><Button type=\"submit\">Log In</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\n\r\nconst Signup = (props) => {\r\n    return (\r\n        <Modal id=\"signupModal\" show={props.show} onHide={props.Close}>\r\n            <Modal.Header closeButton><b>Sign Up</b></Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.signup} className=\"signupInputs\">\r\n                    <Form.Control type=\"text\" placeholder=\"Name\" onChange={props.name} required />\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required />\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required />\r\n                    <center><Button type=\"submit\">Sign Up</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Signup","import axios from 'axios'\r\nconst url = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst url = '/api/users'\r\n\r\nconst signup = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { signup }","import React, {useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Nav} from 'react-bootstrap'\r\nimport LoginModal from './Login'\r\nimport SignupModal from './Signup'\r\nimport loginService from '../services/login'\r\nimport signupService from '../services/signup'\r\nimport Notification from './Notification'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst UserService = () => {\r\n    const [loginModal, setLoginModal] = useState(false)\r\n    const handleLoginModal = () => setLoginModal(true)\r\n    const handleLoginNoModal = () => setLoginModal(false)\r\n\r\n    const [signupModal, setSignupModal] = useState(false)\r\n    const handleSignupModal = () => setSignupModal(true)\r\n    const handleSignupNoModal = () => setSignupModal(false)\r\n\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [user, setUser] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const showMessage = (message) => {\r\n        setMessage(message)\r\n        setTimeout(() => {\r\n            setMessage('')\r\n        }, 3000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('logged-Expense-Split-User')\r\n        if(loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            expenseService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const handleName = (event) => setName(event.target.value)\r\n    const handleUsername = (event) => setUsername(event.target.value)\r\n    const handlePassword = (event) => setPassword(event.target.value)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        await loginService.login({\r\n            username, password\r\n        })\r\n        .then(user => {\r\n            window.localStorage.setItem('logged-Expense-Split-User', JSON.stringify(user))\r\n            expenseService.setToken(user.token)\r\n            setUser(user)\r\n            setUsername('')\r\n            setPassword('')\r\n            handleLoginNoModal()\r\n        })\r\n        .catch(error => \r\n            showMessage(<div id=\"snackbar\">'Invalid Username and Password'</div>)\r\n        )\r\n    }\r\n\r\n    const handleSignup = async (event) => {\r\n        event.preventDefault()\r\n        const addedUser = await signupService.signup({\r\n            name, username, password\r\n        })\r\n        showMessage(<div id=\"snackbar\">{`User ${addedUser.name} created`}</div>)\r\n        setUser('')\r\n        setName('')\r\n        setUsername('')\r\n        setPassword('')\r\n        handleSignupNoModal()\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser('')\r\n        window.localStorage.removeItem('logged-Expense-Split-User')\r\n        expenseService.setToken('')\r\n    }\r\n\r\n    if(user === '') {\r\n        return (\r\n            <div>\r\n                <Notification msg={message} />\r\n                <Nav.Link onClick={handleLoginModal}><b>log <span className=\"foo\">In</span></b></Nav.Link>\r\n                <LoginModal show={loginModal} Close={handleLoginNoModal} username={handleUsername} pwd={handlePassword} login={handleLogin}/>\r\n    \r\n                <Nav.Link onClick={handleSignupModal}><b>Sign <span className=\"foo\">Up</span></b></Nav.Link>\r\n                <SignupModal show={signupModal} Close={handleSignupNoModal} name={handleName} username={handleUsername} pwd={handlePassword} signup={handleSignup}/>              \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Notification msg={message} />\r\n                <Nav.Link><Link to=\"/user\"><b>{user.name}</b></Link></Nav.Link>\r\n                <Nav.Link onClick={logout}><b>Logout</b></Nav.Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserService","import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport UserService from './UserService'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"sm\" className=\"fixed-top\">\r\n            <Navbar.Brand href=\"/\">\r\n                <b>Expense <span className=\"slash\">/</span> Split</b>\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <UserService />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React, {useState, useEffect} from 'react'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst DisplayExpense = () => {\r\n    const [expenses, setExpenses] = useState([])\r\n\r\n    useEffect(() => {\r\n        expenseService.getData().then(expenses => setExpenses(expenses))\r\n    }, [])\r\n\r\n    const showExpense = () => expenses.map(expense => {\r\n        let date = new Date(expense.date)\r\n        let to_whom = expense.members.filter(member => member.isChecked === true)\r\n        let count = to_whom.length\r\n        let share = expense.amount / count\r\n\r\n        if(count > 0) {\r\n            return(\r\n                <Col>\r\n                    <Card key={expense.id}>\r\n                        <h5>Expense Name - {expense.expense_name}</h5>\r\n                        <p>Amount - {expense.amount}</p>\r\n                        <p>Date - {`${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</p>\r\n                        <p>By - {expense.by_whom}</p>\r\n                        <p>Members {to_whom.map(member => `${member.name} ${share} `) }</p>\r\n                    </Card>\r\n                </Col>\r\n                )\r\n        }\r\n        else {\r\n            return(\r\n                <Col>\r\n                    <Card key={expense.id}>\r\n                        <h5>Expense Name - {expense.expense_name}</h5>\r\n                        <p>Amount - {expense.amount}</p>\r\n                        <p>Date - {`${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</p>\r\n                        <p>By -{expense.by_whom}</p>\r\n                        <p>Members {expense.by_whom} {expense.amount}</p>\r\n                    </Card> \r\n                </Col>\r\n                )               \r\n        }\r\n        })\r\n   \r\n    return (\r\n        <Container>\r\n            <Row className=\"row-cols-4\">\r\n                {showExpense()}  \r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DisplayExpense","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Navigation from './components/Navigation'\nimport DisplayExpense from './components/DisplayExpense'\n\nconst App = () => {\n\n  return (\n      <Router>\n        <Navigation />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" render={() => <About />} />\n        <Route exact path=\"/user\" render={() => <DisplayExpense />} />\n      </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}