{"version":3,"sources":["Images/reactjs.png","Images/nodejs.png","Images/mongodb.png","components/InfoCard.js","components/ExpenseForm.js","components/Notification.js","components/NewExpenseModal.js","services/expense-split.js","components/Home.js","components/About.js","components/Login.js","components/Signup.js","services/login.js","services/signup.js","components/UserService.js","components/Navigation.js","components/DisplayExpense.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","InfoCard","props","IsFirstCardUp","firstCard","IsSecondCardUp","secondCard","IsThirdCardUp","thirdCard","first","react_default","a","createElement","expName","className","Date","date","toDateString","second","members","map","member","index","key","name","Card","expenses","expense","to","to_whom","filter","isChecked","amount","by_whom","ExpenseForm","_useState","useState","_useState2","Object","slicedToArray","selectedRadio","setSelectedRadio","handleRadio","event","target","value","handleSelectedRadio","Container","Form","onSubmit","splitExpenses","Row","Col","Control","onChange","handleExpName","placeholder","required","handleDate","type","Button","title","onClick","handleFirst","handleMember","removeMember","addMember","handleSecond","handleAmount","style","color","fontWeight","Check","checked","label","handleCheckbox","addExpenseModal","addExpenseToInfoCard","Notification","msg","NewExpenseModal","Modal","show","onHide","Close","Header","closeButton","Body","url","token","expense_split","setToken","newToken","concat","getData","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","addData","_ref2","_callee2","config","_context2","headers","Authorization","post","_x","deleteData","_ref3","_callee3","expense_id","_context3","delete","_x2","updateData","_ref4","_callee4","_context4","header","put","_x3","_x4","Home","message","setMessage","_useState3","_useState4","setExpName","_useState5","_useState6","setDate","_useState7","_useState8","setAmount","_useState9","_useState10","setBy","_useState11","_useState12","setTo","_useState13","_useState14","setMembers","_useState15","_useState16","setExpenses","_useState17","_useState18","setFirst","_useState19","_useState20","setSecond","_useState21","_useState22","setThird","_useState23","_useState24","newExpModal","setModalUp","_useState25","_useState26","isExpenseAdded","setExpenseAdded","_useState27","_useState28","setSplitted","handleThird","handleModalDown","temp","toConsumableArray","showMessage","setTimeout","makeNullExpense","addExpense","newExpense","Number","length","isNaN","push","id","preventDefault","components_Notification","components_NewExpenseModal","sm","components_ExpenseForm","temp1","splice","expense_name","expensesOfEachMembers","memb","splittedExp","by","share","forEach","element","found","findIndex","foo","calculateExpense","components_InfoCard","About","src","react","alt","node","mongodb","href","rel","Login","login","username","pwd","Signup","signup","services_login","credentials","services_signup","UserService","loginModal","setLoginModal","handleLoginNoModal","signupModal","setSignupModal","handleSignupNoModal","user","setUser","setName","setUsername","password","setPassword","makeNull","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","expenseService","handleUsername","handlePassword","handleLogin","loginService","then","setItem","stringify","catch","error","handleSignup","signupService","savedUser","Nav","Link","components_Login","components_Signup","react_router_dom","removeItem","Navigation","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","components_UserService","DisplayExpense","loggedUser","handleEditExpense","handleRemoveExpense","confirm","deleted","exp","App","components_Navigation","react_router","exact","path","component","render","components_About","components_DisplayExpense","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d05cf5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactjs.815bfb21.png\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.dacb853d.png\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.3bd34a07.png\";","import React, {useState} from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst InfoCard = (props) => {\r\n    const IsFirstCardUp = props.firstCard\r\n    const IsSecondCardUp = props.secondCard\r\n    const IsThirdCardUp = props.thirdCard\r\n\r\n    const allEmpty = () => (\r\n        <div className=\"empty\">\r\n            <p>Please proceed with the three steps to split your expenses.</p> \r\n            <p><span className=\"round\">1</span>Name your thing</p>\r\n            <p><span className=\"round\">2</span>Make your group</p>\r\n            <p><span className=\"round\">3</span>Add your expenses</p>\r\n        </div>\r\n    )\r\n\r\n    const twoMoreSteps = () => (\r\n        <div className=\"empty\">\r\n            <p>C'mon two more steps to go...</p> \r\n            <p><span className=\"round\">2</span>Make your group</p>\r\n            <p><span className=\"round\">3</span>Add your expenses</p>\r\n        </div>        \r\n    )\r\n\r\n    const oneMoreStep = () => (\r\n         <div className=\"empty\">\r\n            <p>Almost there! one more to go</p> \r\n            <p><span className=\"round\">3</span>Add your expenses</p>\r\n        </div>        \r\n    )\r\n\r\n    const first = () => (\r\n        <div>\r\n            <center><h4>{props.expName}</h4></center>\r\n            <div className=\"flexDisplay blocks\">\r\n                <i className=\"material-icons calendar\">event</i><span>{new Date(props.date).toDateString()}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const second = () => (\r\n        <div className=\"blocks\">\r\n            <h6>Your Group</h6>\r\n            {\r\n                props.members.map((member, index) => {\r\n                    return (\r\n                        <div key={index} className=\"flexDisplay\">\r\n                            <i className=\"material-icons person\">person</i><span>{member.name}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const third = () => {\r\n        return (\r\n            <div className=\"blocks\">\r\n                <h6>Expenses</h6>\r\n                {\r\n                    props.expenses.map((expense, index) => { \r\n                        let to = expense.to_whom.filter(to => to.isChecked === true)                       \r\n                        return (\r\n                            <div className=\"blocks\" key={index}>\r\n                                <div className=\"flexDisplay\">\r\n                                    <i className=\"material-icons white\">navigate_next</i>\r\n                                    <span className=\"white\">Amount -</span>\r\n                                    <span>{expense.amount}</span>\r\n                                </div> \r\n                                <div>\r\n                                    <span className=\"white\">By -</span> \r\n                                    <span>{expense.by_whom}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"white\">To -</span> \r\n                                    {\r\n                                        to.map((to, index) => <span key={index}>{to.name}</span>)\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (IsFirstCardUp && IsSecondCardUp && IsThirdCardUp) {\r\n        return (\r\n            <Card className=\"infoCard\">\r\n                {first()}\r\n                <hr/>\r\n                {second()}\r\n                <hr/>\r\n                {third()}\r\n            </Card>\r\n        )\r\n    }\r\n    else if (IsFirstCardUp && IsSecondCardUp && !IsThirdCardUp) {\r\n      return (\r\n            <Card className=\"infoCard\">\r\n                {first()}\r\n                <hr/>\r\n                {second()}\r\n                <hr/>\r\n                {oneMoreStep()}\r\n            </Card>\r\n        )\r\n    }\r\n    else if (IsFirstCardUp && !IsSecondCardUp && !IsThirdCardUp) {\r\n        return (\r\n            <Card className=\"infoCard\">\r\n                {first()}\r\n                <hr/>\r\n                {twoMoreSteps()}\r\n            </Card>\r\n        )\r\n    }\r\n    else if (!IsFirstCardUp && !IsSecondCardUp && !IsThirdCardUp) {\r\n        return (\r\n            <Card className=\"infoCard\">\r\n                {allEmpty()}\r\n            </Card>\r\n        )           \r\n    }  \r\n}\r\n\r\nexport default InfoCard","import React, {useState} from 'react'\r\nimport {Container, Row, Col, Card, Button, Form} from 'react-bootstrap'\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [selectedRadio, setSelectedRadio] = useState('')\r\n\r\n    const handleSelectedRadio = (event) => setSelectedRadio(event.target.value ) \r\n\r\n    const handleRadio = (event) => {\r\n        props.handleRadio(event)\r\n        handleSelectedRadio(event)\r\n    }\r\n\r\n return (\r\n    <Container className=\"split\">\r\n        <Form onSubmit={props.splitExpenses} >\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <center><h4 className=\"one\">1</h4></center>\r\n                        <Form.Control onChange={props.handleExpName} value={props.expName || \"\"} placeholder=\"C'mon Name it\" required/>\r\n                        <Form.Control onChange={props.handleDate} value={props.date} type=\"date\" required/>\r\n                        <center><Button title=\"Name your thing\" onClick={props.handleFirst}>Name your thing</Button></center>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card>\r\n                        <center><h4 className=\"two\">2</h4></center>\r\n                        {\r\n                            props.members.map((member,index) => {\r\n                                return (\r\n                                    <div className=\"addPerson\" key={index}>\r\n                                        <Form.Control value={member.name || \"\"} placeholder=\"Person Name\" onChange={(event) => props.handleMember(event, index)} />\r\n                                        <i className=\"material-icons minusBtn\" title=\"delete member\" onClick={() => props.removeMember(index)}>delete</i>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <center>\r\n                            <i className=\"material-icons addBtn\" title=\"add member\" onClick={(event) => props.addMember(event)}>add_circle</i>\r\n                        </center>\r\n                        <center><Button title=\"form group\" onClick={props.handleSecond}>Make your group</Button></center>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card>\r\n                        <center><h4 className=\"three\">3</h4></center>\r\n                        <Form.Control onChange={props.handleAmount} value={props.amount || \"\"} placeholder=\"Amount\" />\r\n                        <Row style={{color: \"#003B73\", fontWeight: 600}}>By whom</Row> \r\n                        <Row>\r\n                        {\r\n                            props.members.map((member,index) => {\r\n                                return(\r\n                                    <Col key={index}>\r\n                                        <Form.Check type=\"radio\" checked={selectedRadio === member.name} value={member.name || \"\"} \r\n                                        label={member.name} onChange={(event) => handleRadio(event)} />\r\n                                    </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                        </Row>\r\n                        <Row style={{color: \"#003B73\", fontWeight: 600}}>To whom</Row>\r\n                        <Row>\r\n                        {\r\n                            props.to_whom.map((member,index) => {\r\n                                return(\r\n                                    <Col key={index}>\r\n                                        <Form.Check type=\"checkbox\" value={member.name || \"\"} label={member.name} checked={member.isChecked} \r\n                                            onChange={(event) => props.handleCheckbox(event, index)}/>\r\n                                    </Col>\r\n                                )\r\n                            })\r\n                        }\r\n                        </Row>\r\n                        <center>\r\n                            <i className=\"material-icons addBtn\" title=\"add more expense\" onClick={(event) => props.addExpenseModal(event)}>add_circle</i>\r\n                        </center>\r\n                        <center><Button title=\"add the expenses\" onClick={props.addExpenseToInfoCard}>Add the expenses</Button></center>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <center><Button title=\"Split the expenses\" className=\"split_btn\" type=\"submit\">Finally, SPLIT</Button></center>\r\n        </Form>\r\n    </Container>\r\n )\r\n}\r\n\r\nexport default ExpenseForm","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    if(props.msg === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        props.msg\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState} from'react'\r\nimport { Modal, Form, Row, Col, Button} from 'react-bootstrap'\r\n\r\nconst NewExpenseModal = (props) => {\r\n    const [selectedRadio, setSelectedRadio] = useState('')\r\n\r\n    const handleSelectedRadio = (event) => setSelectedRadio(event.target.value ) \r\n\r\n    const handleRadio = (event) => {\r\n        props.handleRadio(event)\r\n        handleSelectedRadio(event)\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"newExpModal\" show={props.show} onHide={props.Close}>\r\n            <Modal.Header closeButton><h5>Enter the new Expense details</h5></Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.addExpenseModal}>\r\n                    <Form.Control placeholder=\"Amount\" onChange={props.handleAmount} value={props.amount || ''} required />\r\n                    \r\n                    <Row className=\"by-to\">By whom</Row>\r\n                    <Row>\r\n                    {\r\n                        props.members.map((member,index) => {\r\n                            return (\r\n                                <Col key={index}>\r\n                                    <Form.Check type=\"radio\" checked={selectedRadio === member.name} value={member.name || ''} \r\n                                        label={member.name} onChange={(event) => handleRadio(event)} />\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Row>\r\n\r\n                    <Row className=\"by-to\">To whom</Row>\r\n                    <Row>\r\n                    {\r\n                        props.members.map((member,index) => {\r\n                            return (\r\n                                <Col key={index}>\r\n                                    <Form.Check type=\"checkbox\" value={member.name || ''} label={member.name} \r\n                                        onChange={(event) => props.handleCheckbox(event, index)} />\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Row>\r\n                    <center><Button type=\"submit\">Add Expense</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NewExpenseModal","import axios from 'axios'\r\nconst url = '/api/expenses'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getData = async () => {\r\n    const response = await axios.get(url)\r\n    return response.data\r\n}\r\n\r\nconst addData = async (expense)=> {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n    const response = await axios.post(url, expense, config)\r\n    return response.data\r\n}\r\n\r\nconst deleteData = async (expense_id) => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n    const response = await axios.delete(`${url}/${expense_id}`, config)\r\n    return response.data\r\n}\r\n\r\nconst updateData = async (expense_id, expense) => {\r\n    const config = {\r\n        header: { Authorization: token }\r\n    }\r\n    const response = await axios.put(`${url}/${expense_id}`, expense, config)\r\n    return response.data\r\n}\r\n\r\nexport default { setToken, getData, addData, deleteData, updateData }","import React, { useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport InfoCard from './InfoCard'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport Notification from './Notification'\r\nimport NewExpenseModal from './NewExpenseModal'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst Home = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [expName, setExpName] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n    const [by_whom, setBy] = useState('')\r\n    const [to_whom, setTo] = useState([{name: null, isChecked: false}, {name: null, isChecked: false}])\r\n    const [members, setMembers] = useState([{name: null}, {name: null}])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [firstCard, setFirst] = useState(false)\r\n    const [secondCard, setSecond] = useState(false)\r\n    const [thirdCard, setThird] = useState(false)\r\n    const [newExpModal, setModalUp] = useState(false) \r\n    const [isExpenseAdded, setExpenseAdded] = useState(false) \r\n    const [splitted, setSplitted] = useState([])     \r\n\r\n    const handleFirst = () => setFirst(true)\r\n    const handleSecond = () => setSecond(true)\r\n    const handleThird = () => setThird(true)\r\n    const handleModalUp = () => setModalUp(true)\r\n    const handleModalDown = () => setModalUp(false)\r\n    const handleExpName = (event) => setExpName(event.target.value)\r\n    const handleDate = (event) => setDate(event.target.value)\r\n    const handleAmount = (event) => setAmount(event.target.value)\r\n    const handleRadio = (event) => setBy(event.target.value)  \r\n\r\n    const handleCheckbox = (event, index) => {\r\n        const temp = [...to_whom]\r\n        temp[index].name = event.target.value\r\n        temp[index].isChecked = !temp[index].isChecked\r\n        setTo(temp)\r\n    }\r\n\r\n    const showMessage = (message) => {\r\n      setMessage(message)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n     \r\n    const handleMember = (event, index) => {\r\n      const temp = [...members]\r\n      temp[index].name = event.target.value\r\n      setMembers(temp)\r\n      \r\n      const temp1 = [...to_whom]\r\n      temp1[index].name = event.target.value\r\n      setTo(temp1)      \r\n    }\r\n   \r\n    const addMember = () => {\r\n      const temp = [...members]\r\n      temp.push({name: null})\r\n      setMembers(temp)\r\n\r\n      const temp1 = [...to_whom]\r\n      temp.push({name: null, isChecked: false})\r\n      setTo(temp1)\r\n    }\r\n  \r\n    const removeMember = (index) => {\r\n      const temp = [...members]\r\n      temp.splice(index, 1)\r\n      setMembers(temp)\r\n    }\r\n\r\n    const makeNullExpense = () => {\r\n      setAmount('')\r\n      setBy('')\r\n      setTo([{name: null, isChecked: false}, {name: null, isChecked: false}])\r\n    }\r\n\r\n    const makeNullAll = () => {\r\n      setExpName('')\r\n      setDate('')\r\n      setMembers([{name: null}, {name: null}])\r\n      setExpenses([])\r\n      makeNullExpense()\r\n    }\r\n\r\n    const addExpense = () => {\r\n      const newExpense = {\r\n        amount: Number(amount),\r\n        by_whom: by_whom,\r\n        to_whom: to_whom\r\n      }\r\n      if(newExpense.amount !== 0 && newExpense.by_whom !== '' && newExpense.to_whom.length !== 0 && isNaN(newExpense.amount) === false) {\r\n        const temp = [...expenses]\r\n        temp.push(newExpense)\r\n        setExpenses(temp)\r\n        setExpenseAdded(true)\r\n        makeNullExpense()\r\n      }\r\n      else if(isNaN(newExpense.amount) === true) {\r\n        showMessage(<div id=\"snackbar\">Please enter a valid Amount</div>)\r\n      }\r\n      else {\r\n        showMessage(<div id=\"snackbar\">Please enter all the Expense details</div>)\r\n      }\r\n    }\r\n\r\n    const addExpenseModal = (event) => {\r\n      event.preventDefault()\r\n      addExpense()\r\n      if(newExpModal)\r\n        handleModalDown()\r\n      else\r\n        handleModalUp()\r\n    }\r\n\r\n    const addExpenseToInfoCard = () => {\r\n      if(isExpenseAdded) {\r\n        handleThird()\r\n        setExpenseAdded(false)\r\n      }\r\n      else {\r\n        addExpense()\r\n        handleThird()\r\n        setExpenseAdded(false)\r\n      }\r\n    }\r\n\r\n     const calculateExpense = (expenses) => {\r\n      const expensesOfEachMembers = members.map(memb => {\r\n        return {\r\n            member: memb.name,\r\n            splittedExp: []\r\n        }\r\n      }) \r\n      expenses.map(expense => {\r\n        let amount = expense.amount\r\n        let by = expense.by_whom\r\n        let to = expense.to_whom.filter(to => to.isChecked === true)\r\n        let share = amount/to.length\r\n        \r\n        to.forEach(element => {\r\n          let found = expensesOfEachMembers.findIndex(foo => (foo.member === element.name && foo.member !== by))\r\n          if (found !== -1) {\r\n            expensesOfEachMembers[found].splittedExp.push({to: by, amount: share})\r\n          }\r\n        })\r\n      })\r\n      setSplitted(expensesOfEachMembers)         \r\n     }\r\n  \r\n    const splitExpenses = (event) => {\r\n      event.preventDefault()\r\n      const newExpense = {\r\n        expense_name: expName,\r\n        date: date,\r\n        members: members,\r\n        expenses: expenses\r\n      }\r\n      if(newExpense.expense_name !== '' && newExpense.date !== '' && newExpense.members.length !== 0 && newExpense.expenses.length !== 0) {\r\n        calculateExpense(newExpense.expenses)\r\n        \r\n        // expenseService.addData(newExpense)\r\n        // .then(returnedExpense => {\r\n        //   \r\n        //  makeNullAll() \r\n        // })\r\n        // .catch(error => {\r\n        //   showMessage(<div id=\"snackbar\">Validation failed, Please verify expense details.</div>)\r\n        //   makeNullAll()\r\n        // })\r\n      }\r\n      else {\r\n        showMessage(<div id=\"snackbar\">Please enter all the details</div>)\r\n        makeNullAll()\r\n      }\r\n    } \r\n\r\n    return (\r\n        <Container className=\"home\">\r\n            <Notification msg={message} />\r\n\r\n            <NewExpenseModal show={newExpModal} Close={handleModalDown} addExpenseModal={addExpenseModal} members={members} \r\n                    amount={amount} handleAmount={handleAmount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} />\r\n            \r\n            <Row>\r\n              <Col sm={9}>\r\n                <ExpenseForm handleExpName={handleExpName} expName={expName} handleDate={handleDate} date={date} to_whom={to_whom} \r\n                        handleMember={handleMember} addMember={addMember} removeMember={removeMember} members={members} \r\n                        addExpenseModal={addExpenseModal} splitExpenses={splitExpenses} handleAmount={handleAmount} \r\n                        amount={amount} handleRadio={handleRadio} handleCheckbox={handleCheckbox} handleFirst={handleFirst}\r\n                        handleSecond={handleSecond} handleThird={handleThird} addExpenseToInfoCard={addExpenseToInfoCard} />\r\n              </Col>\r\n\r\n              <Col sm={3}>\r\n                <InfoCard expName={expName} date={date} members={members} expenses={expenses} \r\n                        firstCard={firstCard} secondCard={secondCard} thirdCard={thirdCard} />\r\n              </Col>\r\n            </Row>\r\n        </Container>       \r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport react from '../Images/reactjs.png'\r\nimport node from '../Images/nodejs.png'\r\nimport mongodb from '../Images/mongodb.png'\r\n\r\nconst About = () => {\r\n    return (\r\n        <center className=\"container\">\r\n            <div>\r\n                <h2>Expense <span className=\"slash\">/</span> Split</h2>\r\n                <div className=\"logos\">\r\n                    <span className=\"logo react\">\r\n                      <img src={react} alt=\"Reactjs\" title=\"React\" />\r\n                    </span>\r\n                    <span className=\"plus\">+</span>\r\n                    <span className=\"logo node\">\r\n                        <img src={node} alt=\"Nodejs\" title=\"Node JS\" />\r\n                    </span>\r\n                    <span className=\"plus\">+</span>\r\n                    <span className=\"logo mongodb\">\r\n                        <img src={mongodb} alt=\"Mongodb\" title=\"mongo DB\" />\r\n                    </span>\r\n                </div>\r\n                <ol className=\"stack\">\r\n                    <li className=\"tech\">Express</li>\r\n                    <li className=\"tech\">REST API</li>\r\n                    <li className=\"tech\">SASS</li>\r\n                    <li className=\"tech\">Bootstrap</li>\r\n                </ol>\r\n            </div>\r\n            <p className=\"footer\">designed & developed by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a></p>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <Modal id=\"loginModal\" show={props.show} onHide={props.Close}>\r\n            <Modal.Header closeButton><b>Log In</b></Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.login} className=\"loginInputs\">\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required />\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required />\r\n                    <center><Button type=\"submit\">Log In</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {Modal, Form, Button} from 'react-bootstrap'\r\n\r\nconst Signup = (props) => {\r\n    return (\r\n        <Modal id=\"signupModal\" show={props.show} onHide={props.Close}>\r\n            <Modal.Header closeButton><b>Sign Up</b></Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.signup} className=\"signupInputs\">\r\n                    <Form.Control type=\"text\" placeholder=\"Name\" onChange={props.name} required />\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required />\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required />\r\n                    <center><Button type=\"submit\">Sign Up</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Signup","import axios from 'axios'\r\nconst url = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst url = '/api/users'\r\n\r\nconst signup = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { signup }","import React, {useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Nav} from 'react-bootstrap'\r\nimport LoginModal from './Login'\r\nimport SignupModal from './Signup'\r\nimport Notification from './Notification'\r\nimport loginService from '../services/login'\r\nimport signupService from '../services/signup'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst UserService = () => {\r\n    const [loginModal, setLoginModal] = useState(false)\r\n    const handleLoginModal = () => setLoginModal(true)\r\n    const handleLoginNoModal = () => setLoginModal(false)\r\n\r\n    const [signupModal, setSignupModal] = useState(false)\r\n    const handleSignupModal = () => setSignupModal(true)\r\n    const handleSignupNoModal = () => setSignupModal(false)\r\n\r\n    const [user, setUser] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const showMessage = (message) => {\r\n        setMessage(message)\r\n        setTimeout(() => {\r\n            setMessage('')\r\n        }, 3000)\r\n    }\r\n\r\n    const makeNull = () => {\r\n        setName('')\r\n        setUsername('')\r\n        setPassword('')\r\n        handleLoginNoModal()\r\n        handleSignupNoModal()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('logged-Expense-Split-User')\r\n        if(loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            expenseService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    const handleName = (event) => setName(event.target.value)\r\n    const handleUsername = (event) => setUsername(event.target.value)\r\n    const handlePassword = (event) => setPassword(event.target.value)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        await loginService.login({\r\n            username, password\r\n        })\r\n        .then(user => {\r\n            window.localStorage.setItem('logged-Expense-Split-User', JSON.stringify(user))\r\n            expenseService.setToken(user.token)\r\n            setUser(user)\r\n            makeNull()\r\n            showMessage(<div id=\"snackbar\">Hi {user.username} <i className=\"material-icons face\">sentiment_very_satisfied</i></div>)\r\n        })\r\n        .catch(error => {\r\n            showMessage(<div id=\"snackbar\">Invalid Username / Password <i className=\"material-icons face\">sentiment_very_dissatisfied</i></div>)\r\n            makeNull()\r\n        })\r\n    }\r\n\r\n    const handleSignup = async (event) => {\r\n        event.preventDefault()\r\n        await signupService.signup({\r\n            name, username, password\r\n        })\r\n        .then(savedUser => {\r\n            showMessage(<div id=\"snackbar\">User {savedUser.name} added <i className=\"material-icons face\">sentiment_very_satisfied</i></div>)\r\n            makeNull()\r\n        })\r\n        .catch(error => {\r\n            showMessage(<div id=\"snackbar\">Something went wrong <i className=\"material-icons face\">sentiment_very_dissatisfied</i></div>)\r\n            makeNull()\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        showMessage(<div id=\"snackbar\">Bye {user.username} <i className=\"material-icons face\">sentiment_dissatisfied</i></div>)\r\n        setUser('')\r\n        window.localStorage.removeItem('logged-Expense-Split-User')\r\n        expenseService.setToken('')\r\n    }\r\n\r\n    if(user === '') {\r\n        return (\r\n            <div>\r\n                <Notification msg={message} />\r\n                <Nav.Link onClick={handleLoginModal}><b>log <span className=\"foo\">In</span></b></Nav.Link>\r\n                <LoginModal show={loginModal} Close={handleLoginNoModal} username={handleUsername} pwd={handlePassword} login={handleLogin}/>\r\n    \r\n                <Nav.Link onClick={handleSignupModal}><b>Sign <span className=\"foo\">Up</span></b></Nav.Link>\r\n                <SignupModal show={signupModal} Close={handleSignupNoModal} name={handleName} username={handleUsername} pwd={handlePassword} \r\n                signup={handleSignup}/>              \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Notification msg={message} />\r\n                <Nav.Link><Link to=\"/user\"><b>{user.name}</b></Link></Nav.Link>\r\n                <Nav.Link onClick={logout}><b>Logout</b></Nav.Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserService","import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport UserService from './UserService'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"sm\" className=\"fixed-top\">\r\n            <Navbar.Brand href=\"/\">\r\n                <b>Expense <span className=\"slash\">/</span> Split</b>\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <UserService />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React, {useState, useEffect} from 'react'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport Notification from './Notification'\r\nimport expenseService from '../services/expense-split'\r\n\r\nconst DisplayExpense = () => {\r\n    const [expenses, setExpenses] = useState([])\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        const loggedUser = window.localStorage.getItem('logged-Expense-Split-User')\r\n        if(loggedUser) {\r\n            expenseService.getData()\r\n            .then(expenses => setExpenses(expenses.filter(expense => expense.user.id === JSON.parse(loggedUser).id)))\r\n        }\r\n    }, [])\r\n\r\n    const showMessage = (message) => {\r\n        setMessage(message)\r\n        setTimeout(() => {\r\n            setMessage('')\r\n        }, 3000)\r\n    }\r\n\r\n    const handleEditExpense = () => {\r\n        let hi\r\n    }\r\n\r\n    const handleRemoveExpense = async (expense) => {\r\n        let check = window.confirm('Wanna delete?')\r\n        if(check) {\r\n            await expenseService.deleteData(expense.id) \r\n            .then(deleted => {\r\n                setExpenses(expenses.filter(exp => exp.id !== expense.id))\r\n                showMessage(<div id=\"snackbar\">Deleted!</div>)\r\n            })  \r\n            .catch(error => {\r\n                showMessage(<div id=\"snackbar\">Couldn't delete {expense.expense_name}</div>)\r\n            })        \r\n        }\r\n    }\r\n\r\n    const showExpense = () => expenses.map((expense, index) => {\r\n            return(\r\n                <Col>\r\n                    <Card className=\"infoCard\" key={index}>\r\n                        <div>\r\n                            <div className=\"flexDisplay\">\r\n                                <h4>{expense.expense_name}</h4>\r\n                                <span className=\"tools\">\r\n                                    <i className=\"material-icons edit\" title=\"Edit\" onClick={handleEditExpense}>edit</i>\r\n                                    <i className=\"material-icons delete\" title=\"delete\" onClick={() => handleRemoveExpense(expense)}>delete</i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"flexDisplay blocks\">\r\n                                <i className=\"material-icons calendar\">event</i><span>{new Date(expense.date).toDateString()}</span>\r\n                            </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"blocks\">\r\n                            <h6>Your Group</h6>\r\n                            {\r\n                                expense.members.map((member, index) => {\r\n                                    return (\r\n                                        <div key={index} className=\"flexDisplay\">\r\n                                            <i className=\"material-icons person\">person</i><span>{member.name}</span>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"blocks\">\r\n                            <h6>Expenses</h6>\r\n                            {\r\n                                expense.expenses.map((expense, index) => {\r\n                                    let to = expense.to_whom.filter(to => to.isChecked === true)\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            <div className=\"flexDisplay\">\r\n                                                <i className=\"material-icons white\">navigate_next</i>\r\n                                                <span className=\"white\">Amount</span>\r\n                                                <span>{expense.amount}</span>\r\n                                            </div> \r\n                                            <div>\r\n                                                <span className=\"white\">By</span> \r\n                                                <span>{expense.by_whom}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className=\"white\">To</span> \r\n                                                {\r\n                                                    to.map((to, index) => <span key={index}>{to.name}</span>)\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                )\r\n        })\r\n   \r\n    return (\r\n        <Container>\r\n            <Notification msg={message} />\r\n            <Row className=\"row-cols-4\">\r\n                {showExpense()}  \r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DisplayExpense","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Navigation from './components/Navigation'\nimport DisplayExpense from './components/DisplayExpense'\n\nconst App = () => {\n\n  return (\n      <Router>\n        <Navigation />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" render={() => <About />} />\n        <Route exact path=\"/user\" render={() => <DisplayExpense />} />\n      </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}